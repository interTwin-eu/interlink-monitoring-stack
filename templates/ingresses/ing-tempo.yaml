apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: {{ .Release.Namespace }}
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.maintainerEmail }}
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: example-certificate
  namespace: {{ .Release.Namespace }}
spec:
  secretName: tempo-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: {{ .Values.ingresses.tempo.host }}
  dnsNames:
  - {{ .Values.ingresses.tempo.host }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    {{- if .Values.ingresses.tempo.auth_enabled }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    {{- end }}
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"

  name: tempo-ingress
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /  # Match gRPC paths
            pathType: Prefix
            backend:
              service:
                name:  {{ .Values.services.tempo.name }}
                port:
                  number: {{ .Values.ingresses.tempo.port }}
      host: {{ .Values.ingresses.tempo.host }}
  tls:
  - hosts:
    - {{ .Values.ingresses.tempo.host }}
    secretName: tempo-tls